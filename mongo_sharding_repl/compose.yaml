name: mongo-sharding-repl

services:
  configSrv:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: configSrv
    restart: always
    ports:
      - "27000:27000"
    networks:
      app-network:
        ipv4_address: 175.17.0.255
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "configSrv",
        "--bind_ip_all",
        "--port",
        "27000"
      ]
  #shard01
  shard01-a:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard01-a
    restart: always
    ports:
      - "27101:27101"
    networks:
      app-network:
        ipv4_address: 175.17.1.1    
    volumes:
      - shard01-a-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard01",
        "--bind_ip_all",
        "--port",
        "27101"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  shard01-b:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard01-b
    restart: always
    ports:
      - "27102:27102"
    networks:
      app-network:
        ipv4_address: 175.17.1.2    
    volumes:
      - shard01-b-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard01",
        "--bind_ip_all",
        "--port",
        "27102"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  shard01-c:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard01-c
    restart: always
    ports:
      - "27103:27103"
    networks:
      app-network:
        ipv4_address: 175.17.1.3    
    volumes:
      - shard01-c-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard01",
        "--bind_ip_all",
        "--port",
        "27103"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  #shard02
  shard02-a:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard02-a
    restart: always
    ports:
      - "27201:27201"
    networks:
      app-network:
        ipv4_address: 175.17.2.1    
    volumes:
      - shard02-a-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard02",
        "--bind_ip_all",
        "--port",
        "27201"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  shard02-b:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard02-b
    restart: always
    ports:
      - "27202:27202"
    networks:
      app-network:
        ipv4_address: 175.17.2.2    
    volumes:
      - shard02-b-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard02",
        "--bind_ip_all",
        "--port",
        "27202"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  shard02-c:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard02-c
    restart: always
    ports:
      - "27203:27203"
    networks:
      app-network:
        ipv4_address: 175.17.2.3    
    volumes:
      - shard02-c-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard02",
        "--bind_ip_all",
        "--port",
        "27203"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  #router
  mongos_router:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27100:27100"
    networks:
      app-network:
        ipv4_address: 175.17.100.0    
    command:
      [
        "mongos",
        "--configdb",
        "configSrv/configSrv:27000",
        "--bind_ip_all",
        "--port",
        "27100"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s 
#App
  pymongo_api:
    container_name: pymongo_api_shard
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    networks:
      app-network:
        ipv4_address: 175.17.255.0
    environment:
      MONGODB_URL: "mongodb://mongos_router:27100"
      MONGODB_DATABASE_NAME: "somedb"   
networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 175.17.0.0/16
volumes:
  config-data:
  shard01-a-data:
  shard01-b-data:
  shard01-c-data:
  shard02-a-data:
  shard02-b-data:
  shard02-c-data:
  







